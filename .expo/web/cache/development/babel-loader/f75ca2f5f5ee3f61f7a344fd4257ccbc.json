{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/alex/myGithub/findingNameo_native/App.tsx\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { MainNav } from \"./types\";\nimport FrontPage from \"./components/FrontPage\";\nvar Stack = createStackNavigator();\n\nvar pages = _defineProperty({}, MainNav.FrontPage, FrontPage);\n\nexport default function App() {\n  var _this = this;\n\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return React.createElement(SafeAreaProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, React.createElement(NavigationContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, React.createElement(Stack.Navigator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, Object.keys(pages).map(function (pageName, i) {\n      return React.createElement(Stack.Screen, {\n        name: pageName,\n        component: pages[pageName],\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 54\n        }\n      });\n    }))), React.createElement(StatusBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/alex/myGithub/findingNameo_native/App.tsx"],"names":["StatusBar","React","SafeAreaProvider","useCachedResources","useColorScheme","NavigationContainer","createStackNavigator","MainNav","FrontPage","Stack","pages","App","isLoadingComplete","colorScheme","Object","keys","map","pageName","i"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AAGA,SAASC,mBAAT,QAA6D,0BAA7D;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAA6BC,OAA7B;AACA,OAAOC,SAAP;AAKA,IAAMC,KAAK,GAAGH,oBAAoB,EAAlC;;AAEA,IAAII,KAA4D,uBAC7DH,OAAO,CAACC,SADqD,EACzCA,SADyC,CAAhE;;AAOA,eAAe,SAASG,GAAT,GAAe;AAAA;;AAC5B,MAAMC,iBAAiB,GAAGT,kBAAkB,EAA5C;AACA,MAAMU,WAAW,GAAGT,cAAc,EAAlC;;AAEA,MAAI,CAACQ,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBM,GAAnB,CAAuB,UAACC,QAAD,EAAWC,CAAX;AAAA,aAAiB,oBAAC,KAAD,CAAO,MAAP;AACvC,QAAA,IAAI,EAAED,QADiC;AAEvC,QAAA,SAAS,EAAEP,KAAK,CAACO,QAAD,CAFuB;AAGvC,QAAA,GAAG,EAAEC,CAHkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB;AAAA,KAAvB,CADH,CADF,CAFF,EAWE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAeD;AACF","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { RootStackParamList, MainNav } from './types';\nimport FrontPage from './components/FrontPage';\n//import SignupPage from './components/SignupPage';\n//import LoginPage from './components/LoginPage';\n//import MainPage from './components/mainContent/MainPage';\n\nconst Stack = createStackNavigator();\n\nvar pages: {[pageName: string]: (...args: any[]) => JSX.Element} = {\n  [MainNav.FrontPage]: FrontPage,\n  //[MainNav.SignInPage]: SignupPage,\n  //[MainNav.LoginPage]: LoginPage,\n  //[MainNav.MainPage]: MainPage\n}\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        {/*<Navigation colorScheme={colorScheme} />*/}\n        <NavigationContainer>\n          <Stack.Navigator>\n            {Object.keys(pages).map((pageName, i) => <Stack.Screen\n              name={pageName}\n              component={pages[pageName]}\n              key={i}\n            />)}\n          </Stack.Navigator>\n        </NavigationContainer>\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}