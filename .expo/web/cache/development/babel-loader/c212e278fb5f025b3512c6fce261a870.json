{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/alex/myGithub/findingNameo_native/components/LoginPage.tsx\";\nimport React from 'react';\nimport { hash, waitForAjaxCall } from \"./Utilities\";\nimport Icons from \"./Icons\";\nimport UserObject from \"./UserObject\";\nimport { MainNav } from \"../types\";\nimport { useNavigation } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Text, View } from \"../components/Themed\";\nimport { GlobalStyle, TailwindColors, rem, remText } from \"../AppStyles\";\nimport { FrontPagesNav } from \"./FrontPagesNav\";\nvar LoginPageStyles = StyleSheet.create({\n  loginPage: {\n    width: \"100%\",\n    backgroundColor: TailwindColors.indigo[100]\n  },\n  title: {\n    fontSize: remText(5),\n    margin: 16,\n    fontWeight: \"bold\",\n    color: TailwindColors.grey[800],\n    textAlign: 'center'\n  },\n  logoContainer: {\n    flexGrow: 1,\n    height: rem(17),\n    opacity: 0.75,\n    marginTop: rem(1),\n    marginBottom: rem(1)\n  },\n  buttons_button: {\n    width: '40%',\n    height: 52.5,\n    borderRadius: 10,\n    fontSize: 32,\n    fontWeight: '300',\n    textAlign: 'center',\n    padding: 5\n  },\n  signup: {\n    backgroundColor: 'white',\n    color: TailwindColors.indigo[700]\n  },\n  inputLabel: {\n    color: TailwindColors.indigo[700],\n    textAlign: 'center',\n    fontSize: remText(2),\n    marginTop: 16,\n    marginBottom: 16 * 0.3\n  },\n  input: {\n    borderColor: TailwindColors.indigo[700],\n    borderWidth: rem(0.15),\n    fontSize: rem(1),\n    textAlign: 'center',\n    height: rem(2),\n    width: rem(14),\n    backgroundColor: 'white',\n    borderRadius: rem(2)\n  }\n});\n\nfunction LoginPage() {\n  var navigation = useNavigation();\n\n  var login = function login(e) {\n    var form, username, passwordHashed, isLoggedIn, loginEndpoint;\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            form = e.target;\n            username = form.username.value;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(hash(form.password.value));\n\n          case 5:\n            passwordHashed = _context.sent;\n            isLoggedIn = false;\n            _context.prev = 7;\n            loginEndpoint = \"\\n                /login/\" + username + \"\\n                /password/\" + passwordHashed + \"\\n            \";\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(waitForAjaxCall('get', loginEndpoint));\n\n          case 11:\n            UserObject.set(username, passwordHashed);\n            navigation.navigate(MainNav.MainPage);\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](7);\n            alert(\"login failed.\");\n\n          case 18:\n            return _context.abrupt(\"return\", false);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[7, 15]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: [LoginPageStyles.loginPage, GlobalStyle.col, GlobalStyle.centerCross, GlobalStyle.padStatusBar],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    style: LoginPageStyles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Login\"), React.createElement(Text, {\n    style: LoginPageStyles.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"username\"), React.createElement(TextInput, {\n    style: LoginPageStyles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: LoginPageStyles.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"password\"), React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: LoginPageStyles.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: [LoginPageStyles.logoContainer],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, Icons.Logo), React.createElement(FrontPagesNav, {\n    mainLabel: \"login\",\n    mainClickHandler: login,\n    secondaryLabel: \"back\",\n    secondaryClickHandler: function secondaryClickHandler() {\n      return navigation.navigate(MainNav.FrontPage);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/alex/myGithub/findingNameo_native/components/LoginPage.tsx"],"names":["React","hash","waitForAjaxCall","Icons","UserObject","MainNav","useNavigation","Text","View","GlobalStyle","TailwindColors","rem","remText","FrontPagesNav","LoginPageStyles","StyleSheet","create","loginPage","width","backgroundColor","indigo","title","fontSize","margin","fontWeight","color","grey","textAlign","logoContainer","flexGrow","height","opacity","marginTop","marginBottom","buttons_button","borderRadius","padding","signup","inputLabel","input","borderColor","borderWidth","LoginPage","navigation","login","e","preventDefault","form","target","username","value","password","passwordHashed","isLoggedIn","loginEndpoint","set","navigate","MainPage","alert","col","centerCross","padStatusBar","Logo","FrontPage"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {SetState, hash, waitForAjaxCall} from './Utilities';\nimport Icons from './Icons';\nimport UserObject from './UserObject';\n\nimport { MainNav } from '../types';\nimport { useNavigation } from '@react-navigation/native';\nimport { StyleSheet, TextInput } from 'react-native';\nimport { Text, View } from '../components/Themed';\nimport { GlobalStyle, TailwindColors, rem, remText } from '../AppStyles';\nimport { FrontPagesNav } from './FrontPagesNav';\n\nconst LoginPageStyles = StyleSheet.create({\n    loginPage: {\n        width: \"100%\",\n        backgroundColor: TailwindColors.indigo[100]\n    },\n\n    title: {\n        fontSize: remText(5),\n        margin: 16,\n        fontWeight: \"bold\",\n        color: TailwindColors.grey[800],\n        textAlign: 'center'\n    },\n\n    logoContainer: {\n        flexGrow: 1,\n        height: rem(17),\n        opacity: 0.75,\n        marginTop: rem(1),\n        marginBottom: rem(1)\n    },\n\n    buttons_button: {\n        width: '40%',\n        height: 52.5,\n        borderRadius: 10,\n        fontSize: 32,\n        fontWeight: '300',\n        textAlign: 'center',\n        padding: 5\n    },\n\n    signup: {\n        backgroundColor: 'white',\n        color: TailwindColors.indigo[700]\n    },\n\n    inputLabel: {\n        color: TailwindColors.indigo[700],\n        textAlign: 'center',\n        fontSize: remText(2),\n        marginTop: 16,\n        marginBottom: 16 * 0.3\n    },\n\n    input: {\n        borderColor: TailwindColors.indigo[700],\n        borderWidth: rem(0.15),\n        fontSize: rem(1),\n        textAlign: 'center',\n        height: rem(2),\n        width: rem(14),\n        backgroundColor: 'white',\n        borderRadius: rem(2)\n    }\n});\n\nfunction LoginPage(){\n\n    const navigation = useNavigation();\n\n    const login = async (e: any): Promise<boolean> => {\n        e.preventDefault();\n\n        let form: HTMLFormElement = e.target;\n        let username: string = form.username.value;\n        let passwordHashed: string = await hash(form.password.value);\n        let isLoggedIn: boolean = false;\n\n        try {\n            let loginEndpoint = `\n                /login/${username}\n                /password/${passwordHashed}\n            `;\n            await waitForAjaxCall('get', loginEndpoint);\n            UserObject.set(username, passwordHashed);\n            navigation.navigate(MainNav.MainPage);\n        } catch {\n            alert(\"login failed.\");\n        }\n\n        return false;\n    }\n\n    return <View style={[LoginPageStyles.loginPage, GlobalStyle.col, GlobalStyle.centerCross, GlobalStyle.padStatusBar]}>\n        <Text style={LoginPageStyles.title}>Login</Text>\n\n        <Text style={LoginPageStyles.inputLabel}>username</Text>\n        <TextInput style={LoginPageStyles.input}></TextInput>\n\n        <Text style={LoginPageStyles.inputLabel}>password</Text>\n        <TextInput secureTextEntry={true} style={LoginPageStyles.input}></TextInput>\n\n        <View style={[LoginPageStyles.logoContainer]}>\n            {Icons.Logo}\n        </View>\n\n        <FrontPagesNav \n                mainLabel=\"login\" \n                mainClickHandler={login}\n                secondaryLabel=\"back\"\n                secondaryClickHandler={() => navigation.navigate(MainNav.FrontPage)}\n            />\n\n    </View>;\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}