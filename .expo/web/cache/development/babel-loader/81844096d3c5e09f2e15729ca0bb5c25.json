{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _pages,\n    _jsxFileName = \"/Users/alex/myGithub/findingNameo_native/App.tsx\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { View } from \"./components/Themed\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { MainNav } from \"./types\";\nimport FrontPage from \"./components/FrontPage\";\nimport LoginPage from \"./components/LoginPage\";\nvar Stack = createStackNavigator();\nvar pages = (_pages = {}, _defineProperty(_pages, MainNav.FrontPage, FrontPage), _defineProperty(_pages, MainNav.LoginPage, LoginPage), _pages);\nexport default function App() {\n  var _this = this;\n\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n  var window = useWindowDimensions();\n  var AppStyles = StyleSheet.create({\n    app: {\n      height: window.height + StatusBar.currentHeight,\n      overflow: 'hidden'\n    }\n  });\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, React.createElement(SafeAreaProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, React.createElement(NavigationContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, React.createElement(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, Object.keys(pages).map(function (pageName, i) {\n      return React.createElement(Stack.Screen, {\n        name: pageName,\n        component: pages[pageName],\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 56\n        }\n      });\n    }))), React.createElement(StatusBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })));\n  }\n}","map":{"version":3,"sources":["/Users/alex/myGithub/findingNameo_native/App.tsx"],"names":["StatusBar","React","SafeAreaProvider","useCachedResources","useColorScheme","View","NavigationContainer","createStackNavigator","MainNav","FrontPage","LoginPage","Stack","pages","App","isLoadingComplete","colorScheme","window","useWindowDimensions","AppStyles","StyleSheet","create","app","height","currentHeight","overflow","headerShown","Object","keys","map","pageName","i"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;;;AAGA,SAAeC,IAAf;AAEA,SAASC,mBAAT,QAA6D,0BAA7D;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAA6BC,OAA7B;AACA,OAAOC,SAAP;AAEA,OAAOC,SAAP;AAGA,IAAMC,KAAK,GAAGJ,oBAAoB,EAAlC;AAEA,IAAIK,KAA4D,yCAC7DJ,OAAO,CAACC,SADqD,EACzCA,SADyC,2BAG7DD,OAAO,CAACE,SAHqD,EAGzCA,SAHyC,UAAhE;AAOA,eAAe,SAASG,GAAT,GAAe;AAAA;;AAC5B,MAAMC,iBAAiB,GAAGX,kBAAkB,EAA5C;AACA,MAAMY,WAAW,GAAGX,cAAc,EAAlC;AAEA,MAAMY,MAAM,GAAGC,mBAAmB,EAAlC;AAEA,MAAMC,SAAS,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAClCC,IAAAA,GAAG,EAAE;AACHC,MAAAA,MAAM,EAAEN,MAAM,CAACM,MAAP,GAAgBtB,SAAS,CAACuB,aAD/B;AAEHC,MAAAA,QAAQ,EAAE;AAFP;AAD6B,GAAlB,CAAlB;;AAQA,MAAI,CAACV,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,aAAa,EAAE;AAAEW,QAAAA,WAAW,EAAE;AAAf,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,MAAM,CAACC,IAAP,CAAYf,KAAZ,EAAmBgB,GAAnB,CAAuB,UAACC,QAAD,EAAWC,CAAX;AAAA,aAAiB,oBAAC,KAAD,CAAO,MAAP;AACvC,QAAA,IAAI,EAAED,QADiC;AAEvC,QAAA,SAAS,EAAEjB,KAAK,CAACiB,QAAD,CAFuB;AAGvC,QAAA,GAAG,EAAEC,CAHkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB;AAAA,KAAvB,CADH,CADF,CAFF,EAWE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF,CADF;AAiBD;AACF","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\nimport { StyleSheet, useWindowDimensions } from 'react-native';\nimport { Text, View } from './components/Themed';\n\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { RootStackParamList, MainNav } from './types';\nimport FrontPage from './components/FrontPage';\n//import SignupPage from './components/SignupPage';\nimport LoginPage from './components/LoginPage';\n//import MainPage from './components/mainContent/MainPage';\n\nconst Stack = createStackNavigator();\n\nvar pages: {[pageName: string]: (...args: any[]) => JSX.Element} = {\n  [MainNav.FrontPage]: FrontPage,\n  //[MainNav.SignInPage]: SignupPage,\n  [MainNav.LoginPage]: LoginPage,\n  //[MainNav.MainPage]: MainPage\n}\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  const window = useWindowDimensions();\n\n  const AppStyles = StyleSheet.create({\n    app: {\n      height: window.height + StatusBar.currentHeight,\n      overflow: 'hidden'\n    }\n  });  \n\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <View>\n        <SafeAreaProvider>\n          {/*<Navigation colorScheme={colorScheme} />*/}\n          <NavigationContainer>\n            <Stack.Navigator screenOptions={{ headerShown: false }}>\n              {Object.keys(pages).map((pageName, i) => <Stack.Screen\n                name={pageName}\n                component={pages[pageName]}\n                key={i}\n              />)}\n            </Stack.Navigator>\n          </NavigationContainer>\n          <StatusBar />\n        </SafeAreaProvider>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}