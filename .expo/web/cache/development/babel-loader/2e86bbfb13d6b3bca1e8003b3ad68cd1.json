{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/alex/myGithub/findingNameo_native/components/LoginPage.tsx\";\nimport React from 'react';\nimport { hash, waitForAjaxCall } from \"./Utilities\";\nimport Icons from \"./Icons\";\nimport UserObject from \"./UserObject\";\nimport { MainNav } from \"../types\";\nimport { useNavigation } from '@react-navigation/native';\n\nfunction LoginPage() {\n  var navigation = useNavigation();\n\n  var login = function login(e) {\n    var form, username, passwordHashed, isLoggedIn, loginEndpoint;\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            form = e.target;\n            username = form.username.value;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(hash(form.password.value));\n\n          case 5:\n            passwordHashed = _context.sent;\n            isLoggedIn = false;\n            _context.prev = 7;\n            loginEndpoint = \"\\n                /login/\" + username + \"\\n                /password/\" + passwordHashed + \"\\n            \";\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(waitForAjaxCall('get', loginEndpoint));\n\n          case 11:\n            UserObject.set(username, passwordHashed);\n            navigation.navigate(MainNav.MainPage);\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](7);\n            alert(\"login failed.\");\n\n          case 18:\n            return _context.abrupt(\"return\", false);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[7, 15]], Promise);\n  };\n\n  return React.createElement(\"form\", {\n    id: \"loginPage\",\n    method: \"post\",\n    className: \"col centerCross\",\n    onSubmit: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }, React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Login\"), React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"username\"), React.createElement(\"input\", {\n    name: \"username\",\n    type: \"text\",\n    pattern: \"[\\\\dA-z_]{1,20}\",\n    title: \"Alphanumeric and underscores.\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"password\"), React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), React.createElement(\"div\", {\n    id: \"logoContainer\",\n    className: \"row center centerCross\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, Icons.Logo), React.createElement(\"div\", {\n    id: \"buttons\",\n    className: \"row center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(\"button\", {\n    id: \"back\",\n    type: \"button\",\n    onClick: function onClick() {\n      return navigation.navigate(MainNav.LoginPage);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"back\"), React.createElement(\"button\", {\n    id: \"login\",\n    type: \"submit\",\n    onClick: function onClick() {\n      return navigation.navigate(MainNav.SignInPage);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"login\")));\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/alex/myGithub/findingNameo_native/components/LoginPage.tsx"],"names":["React","hash","waitForAjaxCall","Icons","UserObject","MainNav","useNavigation","LoginPage","navigation","login","e","preventDefault","form","target","username","value","password","passwordHashed","isLoggedIn","loginEndpoint","set","navigate","MainPage","alert","Logo","SignInPage"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {SetState, hash, waitForAjaxCall} from './Utilities';\nimport Icons from './Icons';\nimport UserObject from './UserObject';\n\nimport { MainNav } from '../types';\nimport { useNavigation } from '@react-navigation/native';\n\nfunction LoginPage(){\n    const navigation = useNavigation();\n\n    const login = async (e: any): Promise<boolean> => {\n        e.preventDefault();\n\n        let form: HTMLFormElement = e.target;\n        let username: string = form.username.value;\n        let passwordHashed: string = await hash(form.password.value);\n        let isLoggedIn: boolean = false;\n\n        try {\n            let loginEndpoint = `\n                /login/${username}\n                /password/${passwordHashed}\n            `;\n            await waitForAjaxCall('get', loginEndpoint);\n            UserObject.set(username, passwordHashed);\n            navigation.navigate(MainNav.MainPage);\n        } catch {\n            alert(\"login failed.\");\n        }\n\n        return false;\n    }\n\n    return <form id='loginPage' method=\"post\" className='col centerCross' onSubmit={login}>\n        <h1>Login</h1>\n\n        <label htmlFor='username'>username</label>\n        <input name='username' type=\"text\" pattern=\"[\\dA-z_]{1,20}\" title=\"Alphanumeric and underscores.\" required></input>\n\n        <label htmlFor='password'>password</label>\n        <input name='password' type='password' required></input>\n\n        <div id='logoContainer' className=\"row center centerCross\">\n            {Icons.Logo}\n        </div>\n\n        <div id='buttons' className=\"row center\">\n            <button id='back' type=\"button\" onClick={() => navigation.navigate(MainNav.LoginPage)}>back</button>\n            <button id='login' type=\"submit\" onClick={() => navigation.navigate(MainNav.SignInPage)}>login</button>\n        </div>\n\n    </form>;\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}