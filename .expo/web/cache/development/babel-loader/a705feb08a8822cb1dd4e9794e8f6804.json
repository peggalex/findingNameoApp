{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/alex/myGithub/findingNameo_native/components/FrontPagesNav.tsx\";\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, View } from \"./Themed\";\nimport { GlobalStyle, TailwindColors, rem, remText } from \"../AppStyles\";\nvar FrontPagesNavStyles = StyleSheet.create({\n  buttons_container: {\n    backgroundColor: 'transparent',\n    width: \"100%\",\n    marginBottom: rem(2)\n  },\n  buttons_button: {\n    width: '42.5%',\n    height: remText(3),\n    borderRadius: remText(0.5),\n    fontSize: remText(2),\n    fontWeight: '300',\n    textAlign: 'center'\n  },\n  mainButton: {\n    backgroundColor: TailwindColors.indigo[700],\n    color: 'white',\n    marginRight: 15\n  },\n  secondaryButton: {\n    backgroundColor: 'white',\n    color: TailwindColors.indigo[700]\n  }\n});\nexport var FrontPages = function FrontPages(_ref) {\n  var mainButton = _ref.mainButton,\n      secondaryButton = _ref.secondaryButton,\n      children = _ref.children;\n  return React.createElement(View, {\n    style: [GlobalStyle.row, GlobalStyle.center, FrontPagesNavStyles.buttons_container],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, children, React.createElement(Text, {\n    style: [FrontPagesNavStyles.mainButton, FrontPagesNavStyles.buttons_button, GlobalStyle.centerAll],\n    onPress: mainButton.clickHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, mainButton.label), React.createElement(Text, {\n    style: [FrontPagesNavStyles.secondaryButton, FrontPagesNavStyles.buttons_button, GlobalStyle.centerAll],\n    onPress: secondaryButton.clickHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, secondaryButton.label));\n};","map":{"version":3,"sources":["/Users/alex/myGithub/findingNameo_native/components/FrontPagesNav.tsx"],"names":["React","Text","View","GlobalStyle","TailwindColors","rem","remText","FrontPagesNavStyles","StyleSheet","create","buttons_container","backgroundColor","width","marginBottom","buttons_button","height","borderRadius","fontSize","fontWeight","textAlign","mainButton","indigo","color","marginRight","secondaryButton","FrontPages","children","row","center","centerAll","clickHandler","label"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAKA,SAASC,IAAT,EAAeC,IAAf;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,GAAtC,EAA2CC,OAA3C;AAEA,IAAMC,mBAAmB,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC1CC,EAAAA,iBAAiB,EAAE;AACfC,IAAAA,eAAe,EAAE,aADF;AAEfC,IAAAA,KAAK,EAAE,MAFQ;AAGfC,IAAAA,YAAY,EAAER,GAAG,CAAC,CAAD;AAHF,GADuB;AAO1CS,EAAAA,cAAc,EAAE;AACZF,IAAAA,KAAK,EAAE,OADK;AAEZG,IAAAA,MAAM,EAAET,OAAO,CAAC,CAAD,CAFH;AAGZU,IAAAA,YAAY,EAAEV,OAAO,CAAC,GAAD,CAHT;AAIZW,IAAAA,QAAQ,EAAEX,OAAO,CAAC,CAAD,CAJL;AAKZY,IAAAA,UAAU,EAAE,KALA;AAMZC,IAAAA,SAAS,EAAE;AANC,GAP0B;AAgB1CC,EAAAA,UAAU,EAAE;AACRT,IAAAA,eAAe,EAAEP,cAAc,CAACiB,MAAf,CAAsB,GAAtB,CADT;AAERC,IAAAA,KAAK,EAAE,OAFC;AAGRC,IAAAA,WAAW,EAAE;AAHL,GAhB8B;AAsB1CC,EAAAA,eAAe,EAAE;AACbb,IAAAA,eAAe,EAAE,OADJ;AAEbW,IAAAA,KAAK,EAAElB,cAAc,CAACiB,MAAf,CAAsB,GAAtB;AAFM;AAtByB,CAAlB,CAA5B;AAiCA,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa;AAAA,MACpBL,UADoB,QACpBA,UADoB;AAAA,MACRI,eADQ,QACRA,eADQ;AAAA,MACSE,QADT,QACSA,QADT;AAAA,SAQlB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACvB,WAAW,CAACwB,GAAb,EAAkBxB,WAAW,CAACyB,MAA9B,EAAsCrB,mBAAmB,CAACG,iBAA1D,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKgB,QADL,EAEI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE,CAACnB,mBAAmB,CAACa,UAArB,EAAiCb,mBAAmB,CAACO,cAArD,EAAqEX,WAAW,CAAC0B,SAAjF,CADX;AAEI,IAAA,OAAO,EAAET,UAAU,CAACU,YAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKV,UAAU,CAACW,KAJhB,CAFJ,EAQI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE,CAACxB,mBAAmB,CAACiB,eAArB,EAAsCjB,mBAAmB,CAACO,cAA1D,EAA0EX,WAAW,CAAC0B,SAAtF,CADX;AAEI,IAAA,OAAO,EAAEL,eAAe,CAACM,YAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKN,eAAe,CAACO,KAJrB,CARJ,CARkB;AAAA,CAAnB","sourcesContent":["import React from 'react';\n\nimport { MainNav } from '../types';\nimport { useNavigation } from '@react-navigation/native';\nimport { StyleSheet } from 'react-native';\nimport { Text, View } from './Themed';\nimport { GlobalStyle, TailwindColors, rem, remText } from '../AppStyles';\n\nconst FrontPagesNavStyles = StyleSheet.create({\n    buttons_container: {\n        backgroundColor: 'transparent',\n        width: \"100%\",\n        marginBottom: rem(2)\n    },\n\n    buttons_button: {\n        width: '42.5%',\n        height: remText(3),\n        borderRadius: remText(0.5),\n        fontSize: remText(2),\n        fontWeight: '300',\n        textAlign: 'center'\n    },\n\n    mainButton: {\n        backgroundColor: TailwindColors.indigo[700],\n        color: 'white',\n        marginRight: 15\n    },\n\n    secondaryButton: {\n        backgroundColor: 'white',\n        color: TailwindColors.indigo[700]\n    }\n});\n\nexport interface IFrontPagesNavButton {\n    label: string,\n    clickHandler: () => void\n}\n\nexport const FrontPages = (\n    { mainButton, secondaryButton, children }:\n    { \n        mainButton: IFrontPagesNavButton, \n        secondaryButton: IFrontPagesNavButton, \n        children?: JSX.Element \n    }\n) => (\n        <View style={[GlobalStyle.row, GlobalStyle.center, FrontPagesNavStyles.buttons_container]}>\n            {children}\n            <Text \n                style={[FrontPagesNavStyles.mainButton, FrontPagesNavStyles.buttons_button, GlobalStyle.centerAll]} \n                onPress={mainButton.clickHandler}\n            >\n                {mainButton.label}\n            </Text>\n            <Text \n                style={[FrontPagesNavStyles.secondaryButton, FrontPagesNavStyles.buttons_button, GlobalStyle.centerAll]} \n                onPress={secondaryButton.clickHandler}\n            >\n                {secondaryButton.label}\n            </Text>\n        </View>\n    )\n"]},"metadata":{},"sourceType":"module"}