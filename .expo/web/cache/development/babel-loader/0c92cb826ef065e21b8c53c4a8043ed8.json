{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["/*import React from 'react'\nimport {SetState, hash, waitForAjaxCall} from './Utilities';\nimport Icons from './Icons';\nimport UserObject from './UserObject';\n\nimport { MainNav } from '../types';\nimport { useNavigation } from '@react-navigation/native';\n\nfunction LoginPage(){\n    const navigation = useNavigation();\n\n    const login = async (e: any): Promise<boolean> => {\n        e.preventDefault();\n\n        let form: HTMLFormElement = e.target;\n        let username: string = form.username.value;\n        let passwordHashed: string = await hash(form.password.value);\n        let isLoggedIn: boolean = false;\n\n        try {\n            let loginEndpoint = `\n                /login/${username}\n                /password/${passwordHashed}\n            `;\n            await waitForAjaxCall('get', loginEndpoint);\n            UserObject.set(username, passwordHashed);\n            navigation.navigate(MainNav.MainPage);\n        } catch {\n            alert(\"login failed.\");\n        }\n\n        return false;\n    }\n\n    return <form id='loginPage' method=\"post\" className='col centerCross' onSubmit={login}>\n        <h1>Login</h1>\n\n        <label htmlFor='username'>username</label>\n        <input name='username' type=\"text\" pattern=\"[\\dA-z_]{1,20}\" title=\"Alphanumeric and underscores.\" required></input>\n\n        <label htmlFor='password'>password</label>\n        <input name='password' type='password' required></input>\n\n        <div id='logoContainer' className=\"row center centerCross\">\n            {Icons.Logo}\n        </div>\n\n        <div id='buttons' className=\"row center\">\n            <button id='back' type=\"button\" onClick={() => navigation.navigate(MainNav.LoginPage)}>back</button>\n            <button id='login' type=\"submit\" onClick={() => navigation.navigate(MainNav.SignInPage)}>login</button>\n        </div>\n\n    </form>;\n}\n\nexport default LoginPage;*/"]},"metadata":{},"sourceType":"script"}