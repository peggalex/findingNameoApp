{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _pages,\n    _jsxFileName = \"/Users/alex/myGithub/findingNameo_native/App.tsx\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport StatusBarInfo from \"react-native-web/dist/exports/StatusBar\";\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { View } from \"./components/Themed\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { MainNav } from \"./types\";\nimport FrontPage from \"./components/FrontPage\";\nimport LoginPage from \"./components/LoginPage\";\nvar Stack = createStackNavigator();\nvar pages = (_pages = {}, _defineProperty(_pages, MainNav.FrontPage, FrontPage), _defineProperty(_pages, MainNav.LoginPage, LoginPage), _pages);\nexport default function App() {\n  var _StatusBarInfo$curren,\n      _this = this;\n\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n  var window = useWindowDimensions();\n  var statusBarHeight = (_StatusBarInfo$curren = StatusBarInfo == null ? void 0 : StatusBarInfo.currentHeight) != null ? _StatusBarInfo$curren : 0;\n  var AppStyles = StyleSheet.create({\n    app: {\n      height: window.height + statusBarHeight,\n      overflow: 'hidden'\n    }\n  });\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n\n  return React.createElement(View, {\n    style: AppStyles.app,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, Object.keys(pages).map(function (pageName, i) {\n    return React.createElement(Stack.Screen, {\n      name: pageName,\n      component: pages[pageName],\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 54\n      }\n    });\n  }))), React.createElement(StatusBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/alex/myGithub/findingNameo_native/App.tsx"],"names":["StatusBar","React","SafeAreaProvider","useCachedResources","useColorScheme","View","NavigationContainer","createStackNavigator","MainNav","FrontPage","LoginPage","Stack","pages","App","isLoadingComplete","colorScheme","window","useWindowDimensions","statusBarHeight","StatusBarInfo","currentHeight","AppStyles","StyleSheet","create","app","height","overflow","headerShown","Object","keys","map","pageName","i"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;;AAEA,OAAOC,KAAP,MAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;;;AAGA,SAAeC,IAAf;AAEA,SAASC,mBAAT,QAA6D,0BAA7D;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAA6BC,OAA7B;AACA,OAAOC,SAAP;AAEA,OAAOC,SAAP;AAGA,IAAMC,KAAK,GAAGJ,oBAAoB,EAAlC;AAEA,IAAMK,KAA4D,yCAC/DJ,OAAO,CAACC,SADuD,EAC3CA,SAD2C,2BAG/DD,OAAO,CAACE,SAHuD,EAG3CA,SAH2C,UAAlE;AAOA,eAAe,SAASG,GAAT,GAAe;AAAA;AAAA;;AAC5B,MAAMC,iBAAiB,GAAGX,kBAAkB,EAA5C;AACA,MAAMY,WAAW,GAAGX,cAAc,EAAlC;AAEA,MAAMY,MAAM,GAAGC,mBAAmB,EAAlC;AAEA,MAAIC,eAAe,4BAAGC,aAAH,oBAAGA,aAAa,CAAEC,aAAlB,oCAAmC,CAAtD;AAEA,MAAMC,SAAS,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAClCC,IAAAA,GAAG,EAAE;AACHC,MAAAA,MAAM,EAAET,MAAM,CAACS,MAAP,GAAgBP,eADrB;AAEHQ,MAAAA,QAAQ,EAAE;AAFP;AAD6B,GAAlB,CAAlB;;AAOA,MAAI,CAACZ,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD;;AACD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,SAAS,CAACG,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAE;AAAEG,MAAAA,WAAW,EAAE;AAAf,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,IAAP,CAAYjB,KAAZ,EAAmBkB,GAAnB,CAAuB,UAACC,QAAD,EAAWC,CAAX;AAAA,WAAiB,oBAAC,KAAD,CAAO,MAAP;AACvC,MAAA,IAAI,EAAED,QADiC;AAEvC,MAAA,SAAS,EAAEnB,KAAK,CAACmB,QAAD,CAFuB;AAGvC,MAAA,GAAG,EAAEC,CAHkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB;AAAA,GAAvB,CADH,CADF,CAHF,EAaE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CADF;AAoBD","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StatusBar as StatusBarInfo } from 'react-native';\nimport React, { useEffect } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\nimport { StyleSheet, useWindowDimensions } from 'react-native';\nimport { Text, View } from './components/Themed';\n\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { RootStackParamList, MainNav } from './types';\nimport FrontPage from './components/FrontPage';\n//import SignupPage from './components/SignupPage';\nimport LoginPage from './components/LoginPage';\n//import MainPage from './components/mainContent/MainPage';\n\nconst Stack = createStackNavigator();\n\nconst pages: {[pageName: string]: (...args: any[]) => JSX.Element} = {\n  [MainNav.FrontPage]: FrontPage,\n  //[MainNav.SignInPage]: SignupPage,\n  [MainNav.LoginPage]: LoginPage,\n  //[MainNav.MainPage]: MainPage\n}\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  const window = useWindowDimensions();\n\n  let statusBarHeight = StatusBarInfo?.currentHeight ?? 0;\n\n  const AppStyles = StyleSheet.create({\n    app: {\n      height: window.height + statusBarHeight,\n      overflow: 'hidden'\n    }\n  });\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n  return (\n    <View style={AppStyles.app}>\n      <SafeAreaProvider>\n\n        {/*<Navigation colorScheme={colorScheme} />*/}\n        <NavigationContainer>\n          <Stack.Navigator screenOptions={{ headerShown: false }}>\n            {Object.keys(pages).map((pageName, i) => <Stack.Screen\n              name={pageName}\n              component={pages[pageName]}\n              key={i}\n            />)}\n          </Stack.Navigator>\n        </NavigationContainer>\n\n        <StatusBar />\n\n      </SafeAreaProvider>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}