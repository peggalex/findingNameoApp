{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar UserObject = function () {\n  function UserObject() {\n    _classCallCheck(this, UserObject);\n\n    this.loggedIn = false;\n    this.username = '';\n    this.password = '';\n    this.ws = null;\n  }\n\n  _createClass(UserObject, null, [{\n    key: \"set\",\n    value: function set(username, password) {\n      var inst = UserObject.instance;\n      inst.loggedIn = true;\n      inst.username = username;\n      inst.password = password;\n      inst.ws = UserObject.getWebSocket(username, password);\n    }\n  }, {\n    key: \"getWebSocket\",\n    value: function getWebSocket(username, password) {\n      var wsPort = parseInt('1234') + 1;\n      var ws = new WebSocket(\"wss://\" + window.location.hostname + \":\" + wsPort + \"/?username=\" + username + \"&password=\" + password);\n\n      ws.onopen = function (event) {\n        return console.log(\"Connected to websocket.\");\n      };\n\n      return ws;\n    }\n  }]);\n\n  return UserObject;\n}();\n\nUserObject.instance = new UserObject();\n\nUserObject.isLoggedIn = function () {\n  return UserObject.instance.loggedIn;\n};\n\nUserObject.getUsername = function () {\n  return UserObject.instance.username;\n};\n\nUserObject.getPassword = function () {\n  return UserObject.instance.password;\n};\n\nUserObject.addWebSocketCallback = function (func) {\n  UserObject.instance.ws.onmessage = function (event) {\n    console.log('received msg:', event.data);\n    func(event);\n  };\n};\n\nUserObject.removeWebSocketCallback = function () {\n  UserObject.instance.ws.onmessage = function () {};\n};\n\nUserObject.reset = function () {\n  UserObject.instance.ws.close();\n  UserObject.instance = new UserObject();\n};\n\nexport default UserObject;","map":{"version":3,"sources":["/Users/alex/myGithub/findingNameo_native/components/UserObject.tsx"],"names":["UserObject","loggedIn","username","password","ws","inst","instance","getWebSocket","wsPort","parseInt","WebSocket","window","location","hostname","onopen","event","console","log","isLoggedIn","getUsername","getPassword","addWebSocketCallback","func","onmessage","data","removeWebSocketCallback","reset","close"],"mappings":";;;IACMA,U;AAOF,wBAAa;AAAA;;AACT,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,EAAL,GAAU,IAAV;AACH;;;;wBAEUF,Q,EAAkBC,Q,EAAiB;AAC1C,UAAIE,IAAI,GAAGL,UAAU,CAACM,QAAtB;AACAD,MAAAA,IAAI,CAACJ,QAAL,GAAgB,IAAhB;AACAI,MAAAA,IAAI,CAACH,QAAL,GAAgBA,QAAhB;AACAG,MAAAA,IAAI,CAACF,QAAL,GAAgBA,QAAhB;AACAE,MAAAA,IAAI,CAACD,EAAL,GAAUJ,UAAU,CAACO,YAAX,CAAwBL,QAAxB,EAAkCC,QAAlC,CAAV;AACH;;;iCAoBmBD,Q,EAAkBC,Q,EAA4B;AAEhE,UAAIK,MAAM,GAAGC,QAAQ,CAAC,MAAD,CAAR,GAAiB,CAA9B;AAEA,UAAIL,EAAa,GAAG,IAAIM,SAAJ,YACTC,MAAM,CAACC,QAAP,CAAgBC,QADP,SACmBL,MADnB,mBACuCN,QADvC,kBAC4DC,QAD5D,CAApB;;AAGIC,MAAAA,EAAE,CAACU,MAAH,GAAY,UAACC,KAAD;AAAA,eAAWC,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAX;AAAA,OAAZ;;AACA,aAAOb,EAAP;AACL;;;;;;AAjDCJ,U,CACKM,Q,GAAuB,IAAIN,UAAJ,E;;AAD5BA,U,CAsBKkB,U,GAAa;AAAA,SAAelB,UAAU,CAACM,QAAX,CAAoBL,QAAnC;AAAA,C;;AAtBlBD,U,CAuBKmB,W,GAAc;AAAA,SAAcnB,UAAU,CAACM,QAAX,CAAoBJ,QAAlC;AAAA,C;;AAvBnBF,U,CAwBKoB,W,GAAc;AAAA,SAAcpB,UAAU,CAACM,QAAX,CAAoBH,QAAlC;AAAA,C;;AAxBnBH,U,CA0BKqB,oB,GAAuB,UAACC,IAAD,EAA6C;AACvEtB,EAAAA,UAAU,CAACM,QAAX,CAAoBF,EAApB,CAAwBmB,SAAxB,GAAoC,UAACR,KAAD,EAAW;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAAK,CAACS,IAAnC;AACAF,IAAAA,IAAI,CAACP,KAAD,CAAJ;AACH,GAHD;AAIH,C;;AA/BCf,U,CAiCKyB,uB,GAA0B,YAAY;AAACzB,EAAAA,UAAU,CAACM,QAAX,CAAoBF,EAApB,CAAwBmB,SAAxB,GAAoC,YAAM,CAAE,CAA5C;AAA6C,C;;AAjCzFvB,U,CAmCK0B,K,GAAQ,YAAY;AACvB1B,EAAAA,UAAU,CAACM,QAAX,CAAoBF,EAApB,CAAwBuB,KAAxB;AACA3B,EAAAA,UAAU,CAACM,QAAX,GAAsB,IAAIN,UAAJ,EAAtB;AACH,C;;AAeL,eAAeA,UAAf","sourcesContent":["\nclass UserObject {\n    static instance: UserObject = new UserObject(); // singleton\n    loggedIn: boolean;\n    username: string;\n    password: string;\n    ws: WebSocket | null;\n\n    constructor(){\n        this.loggedIn = false;\n        this.username = '';\n        this.password = '';\n        this.ws = null;\n    }\n\n    static set(username: string, password: string){\n        let inst = UserObject.instance;\n        inst.loggedIn = true;\n        inst.username = username;\n        inst.password = password;\n        inst.ws = UserObject.getWebSocket(username, password);\n    }\n\n    static isLoggedIn = (): boolean => UserObject.instance.loggedIn;\n    static getUsername = (): string => UserObject.instance.username;\n    static getPassword = (): string => UserObject.instance.password;\n\n    static addWebSocketCallback = (func: (event: MessageEvent)=>void): void => {\n        UserObject.instance.ws!.onmessage = (event) => {\n            console.log('received msg:', event.data);\n            func(event);\n        }\n    }\n\n    static removeWebSocketCallback = (): void => {UserObject.instance.ws!.onmessage = () => {}};\n\n    static reset = (): void => {\n        UserObject.instance.ws!.close();\n        UserObject.instance = new UserObject();\n    }\n\n    static getWebSocket(username: string, password: string): WebSocket{\n\n      let wsPort = parseInt('1234')+1;\n\n      let ws: WebSocket = new WebSocket(\n        `wss://${window.location.hostname}:${wsPort}/?username=${username}&password=${password}`\n      );\n          ws.onopen = (event) => console.log(\"Connected to websocket.\");\n          return ws;\n    }\n\n}\n\nexport default UserObject"]},"metadata":{},"sourceType":"module"}