{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/alex/myGithub/findingNameo_native/components/SignupPage.tsx\";\nimport React from 'react';\nimport { hash, waitForAjaxCall } from \"./Utilities\";\nimport { MainNav } from \"../types\";\nimport { useNavigation } from '@react-navigation/native';\n\nfunction SignupPage() {\n  var navigation = useNavigation();\n  var formRef = React.useRef(null);\n\n  var validate = function validate() {\n    var form = formRef.current;\n\n    if (form.password.value !== form.password2.value) {\n      form.password2.setCustomValidity(\"passwords must match.\");\n    } else {\n      form.password2.setCustomValidity('');\n    }\n\n    return form.password.value !== form.password2.value;\n  };\n\n  var signup = function signup(e) {\n    var form, passwordHashed;\n    return _regeneratorRuntime.async(function signup$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            form = formRef.current;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(hash(form.password.value));\n\n          case 4:\n            passwordHashed = _context.sent;\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(waitForAjaxCall('put', \"\\n                /register/\" + form.username.value + \"\\n                /nickname/\" + form.nickname.value + \"\\n                /password/\" + passwordHashed + \"\\n            \"));\n\n          case 8:\n            alert(\"register successful!\");\n            navigation.navigate(MainNav.LoginPage);\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](5);\n            alert(\"register failed.\");\n\n          case 15:\n            return _context.abrupt(\"return\", false);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 12]], Promise);\n  };\n\n  return React.createElement(\"form\", {\n    id: \"signupPage\",\n    onSubmit: signup,\n    method: \"post\",\n    className: \"col centerCross\",\n    ref: formRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }\n  }, React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Signup\"), React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"username\"), React.createElement(\"input\", {\n    name: \"username\",\n    type: \"text\",\n    pattern: \"[\\\\dA-z_]{1,20}\",\n    title: \"Alphanumeric and underscores.\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), React.createElement(\"label\", {\n    htmlFor: \"nickname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"nickname\"), React.createElement(\"input\", {\n    name: \"nickname\",\n    type: \"text\",\n    pattern: \"[\\\\dA-z_ ]+\",\n    title: \"Alphanumeric, underscores and spaces.\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"password\"), React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(\"label\", {\n    htmlFor: \"password2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"retype password\"), React.createElement(\"input\", {\n    name: \"password2\",\n    type: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), React.createElement(\"div\", {\n    className: \"spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(\"div\", {\n    id: \"buttons\",\n    className: \"row center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(\"button\", {\n    id: \"back\",\n    type: \"button\",\n    onClick: function onClick() {\n      return navigation.navigate(MainNav.FrontPage);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"back\"), React.createElement(\"button\", {\n    onClick: validate,\n    id: \"signup\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"signup\")));\n}\n\nexport default SignupPage;","map":{"version":3,"sources":["/Users/alex/myGithub/findingNameo_native/components/SignupPage.tsx"],"names":["React","hash","waitForAjaxCall","MainNav","useNavigation","SignupPage","navigation","formRef","useRef","validate","form","current","password","value","password2","setCustomValidity","signup","e","preventDefault","passwordHashed","username","nickname","alert","navigate","LoginPage","FrontPage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {SetState, Ref, hash, waitForAjaxCall} from './Utilities';\n\nimport { MainNav } from '../types';\nimport { useNavigation } from '@react-navigation/native';\n\nfunction SignupPage(){\n    const navigation = useNavigation();\n    let formRef: Ref<HTMLFormElement|null> = React.useRef(null);\n\n    const validate = (): boolean => {\n        let form = formRef.current!;\n        if (form.password.value !== form.password2.value){\n            form.password2.setCustomValidity(\"passwords must match.\");\n        } else {\n            form.password2.setCustomValidity('');\n        }\n        return form.password.value !== form.password2.value;\n    }\n\n    const signup = async (e: React.FormEvent): Promise<boolean> => {\n        e.preventDefault();\n\n        let form = formRef.current!;\n        let passwordHashed = await hash(form.password.value);\n        try {\n            await waitForAjaxCall('put', `\n                /register/${form.username.value}\n                /nickname/${form.nickname.value}\n                /password/${passwordHashed}\n            `);\n            alert(\"register successful!\");\n            navigation.navigate(MainNav.LoginPage);\n        } catch {\n            alert(\"register failed.\");\n        }\n\n        return false;\n    }\n\n    return <form id='signupPage' onSubmit={signup} method='post' className='col centerCross' ref={formRef}>\n        <h1>Signup</h1>\n\n        <label htmlFor='username'>username</label>\n        <input name='username' type=\"text\" pattern=\"[\\dA-z_]{1,20}\" title=\"Alphanumeric and underscores.\" required></input>\n\n        <label htmlFor='nickname'>nickname</label>\n        <input name='nickname' type=\"text\" pattern=\"[\\dA-z_ ]+\" title=\"Alphanumeric, underscores and spaces.\" required></input>\n\n        <label htmlFor='password'>password</label>\n        <input name='password' type='password' required></input>\n\n        <label htmlFor='password2'>retype password</label>\n        <input name='password2' type='password' required></input>\n\n        <div className='spacer'></div>\n\n        <div id='buttons' className=\"row center\">\n            <button id='back' type=\"button\" onClick={() => navigation.navigate(MainNav.FrontPage)}>back</button>\n            <button onClick={validate} id='signup' type=\"submit\">signup</button>\n        </div>\n\n    </form>;\n}\n\nexport default SignupPage;"]},"metadata":{},"sourceType":"module"}